Classes:
Person{
	int final id
	string name
	string email
	string address
	char gender

	getId()
	getName()
	getEmail()
	getAddress()
	getGender()

	setName()
	setEmail()
	setAddress()
	setGender()

	getInfo()

}





User extends Person{
	float balance = 0;
	getBalance()
	
	deposit()
	withdraw()
	addSendingTransactionId()
	addRecievingTransactionId()
	ArrayList<sendeingTransactionsIds>
	ArrayList<recievingTransactionsIds>

	getHistory()
}




Admin extends Person{
	deposit(int userId, double amount)
	witdraw(int userId, double amount)
	editUser(int userId, string changeType, string changeValue){
		switch(changeType){
			case "name":
				user.setName(changeValue)
		}	
	}
	n1 = new Transaction(sender, reciever, amount)
			
}






Transaction{
	int final id
	int senderId, recieverId
	senderObj = searchFunction(senderId) return senderObj
	Utils.searchUser(recieverId) return recieverObj
	
	senderObj.withdraw
	senderObj.addSendingTransactionId
	reciever.deposit
	reciever.addRecievingTransactionId
}

-- transactionNo -- withdraw  -- distination name -- 
-- 156165        -- 5000$     -- ahmed            --    

-- transactionNo -- deposit  -- distination name -- 
-- 156165        -- 5000$     -- ahmed            --    


static Utils{
	searchUser()
	
}



for data:
ArrayList or Vector<Transaction>
HashMap<User>




